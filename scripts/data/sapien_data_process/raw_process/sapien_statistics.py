# Get statistics based on sapien_process.json
import json

# The processed json file is generated by sapien_process.py
sapienProPath = './sapien_process.json'
# Containers whose parts can be open/close
careCats = ['Box', 'Suitcase', 'WashingMachine', 'Refrigerator', 'TrashCan', 'Safe', 'Oven', 'Dishwasher', 'Table', 'StorageFurniture', 'Microwave', 'Door']

if __name__ == "__main__":
    sapienProFile = open(sapienProPath)
    sapienPro = json.load(sapienProFile)
    sapienProFile.close()

    modelCats = list(sapienPro.keys())

    # # Get the modelNum
    # for careCat in careCats:
    #     print(careCat, len(sapienPro[careCat]))

    # # Get part category for each careCat and get example modelid and example part index
    # for careCat in careCats:
    #     partCats = set()
    #     for model in sapienPro[careCat]:
    #         parts = model['parts']
    #         for part in parts:
    #             if(part['name'] not in partCats):
    #                 print(careCat, part['name'], model['modelId'], part['id])
    #             partCats.add(part['name'])
    #     print(careCat, partCats)

    # Manually verify the part category
    careParts = {}
    careParts['Box'] = ['rotation_lid', 'lid_surface', 'countertop', 'drawer']
    careParts['Suitcase'] = ['lid']
    careParts['WashingMachine'] = ['door']
    careParts['Refrigerator'] = ['door', 'door_frame', 'display_panel', 'control_panel', 'glass']
    careParts['TrashCan'] = ['cover', 'lid', 'frame_vertical_bar', 'opener', 'cover_lid', 'other_leaf', 'drawer']
    careParts['Safe'] = ['door']
    careParts['Oven'] = ['door', 'door_frame']
    careParts['Dishwasher'] = ['door', 'door_frame', 'display_panel']
    careParts['Table'] = ['drawer', 'drawer_box', 'handle', 'cabinet_door', 'cabinet_door_surface', 'shelf', 'keyboard_tray_surface']
    careParts['StorageFurniture'] = ['cabinet_door', 'drawer', 'drawer_box', 'cabinet_door_surface', 'handle', 'glass', 'other_leaf', 'door']
    careParts['Microwave'] = ['door']
    careParts['Door'] = ['hinge', 'fixed_part', 'surface_board', 'door_body', 'door', 'glass']
    
    result = {}
    for careCat in careCats:
        result[careCat] = {}
        for model in sapienPro[careCat]:
            parts = model['parts']
            modelId = model['modelId']
            for part in parts:
                if part['name'] in careParts[careCat]:
                    if modelId not in result[careCat]:
                        result[careCat][modelId] = [part['id']]
                    else:
                        result[careCat][modelId].append(part['id'])

    careFile = open('./careModelPart.json', 'w')
    json.dump(result, careFile)
    careFile.close()